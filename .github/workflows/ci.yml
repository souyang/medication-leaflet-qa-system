name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  python-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install uv
        uses: astral-sh/setup-uv@v2
        with:
          version: "latest"

      - name: Install dependencies
        run: uv sync

      - name: Run linting
        run: uv run ruff check .

      - name: Run formatting check
        run: uv run ruff format --check .

      - name: Run type checking
        run: uv run mypy .

      - name: Run tests
        run: uv run pytest

  frontend-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: latest

      - name: Install dependencies
        run: pnpm install

      - name: Run type checking
        run: pnpm --filter web typecheck

      - name: Run linting
        run: pnpm --filter web lint

      - name: Build frontend
        run: pnpm --filter web build

      - name: Run tests (if available)
        run: pnpm --filter web test || echo "No tests configured yet"

  integration-tests:
    runs-on: ubuntu-latest
    needs: [python-tests, frontend-tests]
    services:
      redis:
        image: redis/redis-stack:latest
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install uv
        uses: astral-sh/setup-uv@v2

      - name: Install dependencies
        run: uv sync

      - name: Start API server
        run: |
          cd apps/api && PYTHONPATH=. uv run uvicorn app.api:app --port 8000 &
          sleep 10

      - name: Test API health
        run: |
          curl -f http://localhost:8000/health || exit 1

      - name: Test API endpoints
        run: |
          curl -f -X POST http://localhost:8000/ask \
            -H "Content-Type: application/json" \
            -d '{"query": "test query"}' || exit 1
